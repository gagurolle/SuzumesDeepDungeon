// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuzumesDeepDungeon.Data;

#nullable disable

namespace SuzumesDeepDungeon.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250907162617_NewTwitchSystemActionsTable")]
    partial class NewTwitchSystemActionsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SuzumesDeepDungeon.Models.ExternalApi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("HashKey")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hashkey");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("api", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.GameAchievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CompletionPercent")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("completionpercent");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnName("gameid");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imageurl");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("achievements", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.GameRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<TimeSpan>("GameTime")
                        .HasColumnType("interval")
                        .HasColumnName("gametime");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<double?>("MetacriticRate")
                        .HasColumnType("double precision")
                        .HasColumnName("metacriticrate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<double>("Rate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double precision")
                        .HasDefaultValue(0.0)
                        .HasColumnName("rate");

                    b.Property<string>("RawgId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rawgid");

                    b.Property<string>("Released")
                        .HasColumnType("text")
                        .HasColumnName("released");

                    b.Property<string>("Review")
                        .HasColumnType("text")
                        .HasColumnName("review");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("userid");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("text")
                        .HasColumnName("youtubelink");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.HasIndex("Rate");

                    b.HasIndex("Released");

                    b.HasIndex("Status");

                    b.HasIndex("Updated");

                    b.HasIndex("UserId");

                    b.ToTable("gameranks", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.GameTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnName("gameid");

                    b.Property<int>("GamesCount")
                        .HasColumnType("integer")
                        .HasColumnName("gamescount");

                    b.Property<string>("ImageBackground")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imagebackground");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("language");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("slug");

                    b.Property<int>("TagId")
                        .HasColumnType("integer")
                        .HasColumnName("tagid");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("tag", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Screenshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnName("gameid");

                    b.Property<string>("RawgBackgroundUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rawgbackgroundurl");

                    b.Property<string>("Steam600x900Url")
                        .HasColumnType("text")
                        .HasColumnName("steam600x900url");

                    b.Property<string>("SteamCapsuleUrl")
                        .HasColumnType("text")
                        .HasColumnName("steamcapsuleurl");

                    b.Property<string>("SteamHeaderUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("steamheaderurl");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("screenshots", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Stores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnName("gameid");

                    b.Property<string>("RawgId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rawgid");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer")
                        .HasColumnName("storeid");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("stores", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Trailer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("GameId")
                        .HasColumnType("integer")
                        .HasColumnName("gameid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PreviewImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("previewimageurl");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Video480p")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("video480p");

                    b.Property<string>("VideoMaxQuality")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("videomaxquality");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("trailers", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Twitch.TwitchSystemAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("ActionId")
                        .HasColumnType("uuid")
                        .HasColumnName("actionid");

                    b.Property<string>("ActionName")
                        .HasColumnType("text")
                        .HasColumnName("actionname");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("twitchsystemactions", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Twitch.TwitchUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("AccountAge")
                        .HasColumnType("double precision")
                        .HasColumnName("accountage");

                    b.Property<string>("ChannelTitle")
                        .HasColumnType("text")
                        .HasColumnName("channeltitle");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Game")
                        .HasColumnType("text")
                        .HasColumnName("game");

                    b.Property<string>("GameId")
                        .HasColumnType("text")
                        .HasColumnName("gameid");

                    b.Property<bool?>("IsFollowing")
                        .HasColumnType("boolean")
                        .HasColumnName("isfollowing");

                    b.Property<bool?>("IsModerator")
                        .HasColumnType("boolean")
                        .HasColumnName("ismoderator");

                    b.Property<bool?>("IsSubscribed")
                        .HasColumnType("boolean")
                        .HasColumnName("issubscribed");

                    b.Property<bool?>("IsVip")
                        .HasColumnType("boolean")
                        .HasColumnName("isvip");

                    b.Property<DateTime?>("LastActive")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastactive");

                    b.Property<DateTime?>("PreviousActive")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("previousactive");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("profileimageurl");

                    b.Property<string>("SubscriptionTier")
                        .HasColumnType("text")
                        .HasColumnName("subscriptiontier");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("userid");

                    b.Property<string>("UserLogin")
                        .HasColumnType("text")
                        .HasColumnName("userlogin");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.Property<string>("UserType")
                        .HasColumnType("text")
                        .HasColumnName("usertype");

                    b.HasKey("Id");

                    b.ToTable("twitchusers", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("isadmin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("Username");

                    b.ToTable("users", "public");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.ExternalApi", b =>
                {
                    b.HasOne("SuzumesDeepDungeon.Models.User", "User")
                        .WithMany("ExternalApi")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.GameAchievement", b =>
                {
                    b.HasOne("SuzumesDeepDungeon.Models.GameRank", "GameRank")
                        .WithMany("Achievements")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GameRank");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.GameRank", b =>
                {
                    b.HasOne("SuzumesDeepDungeon.Models.User", "User")
                        .WithMany("GameRanks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.GameTag", b =>
                {
                    b.HasOne("SuzumesDeepDungeon.Models.GameRank", "GameRank")
                        .WithMany("Tags")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRank");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Screenshot", b =>
                {
                    b.HasOne("SuzumesDeepDungeon.Models.GameRank", "GameRank")
                        .WithOne("Screenshots")
                        .HasForeignKey("SuzumesDeepDungeon.Models.Screenshot", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRank");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Stores", b =>
                {
                    b.HasOne("SuzumesDeepDungeon.Models.GameRank", "GameRank")
                        .WithMany("Stores")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRank");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.Trailer", b =>
                {
                    b.HasOne("SuzumesDeepDungeon.Models.GameRank", "GameRank")
                        .WithMany("Trailers")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameRank");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.GameRank", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Screenshots");

                    b.Navigation("Stores");

                    b.Navigation("Tags");

                    b.Navigation("Trailers");
                });

            modelBuilder.Entity("SuzumesDeepDungeon.Models.User", b =>
                {
                    b.Navigation("ExternalApi");

                    b.Navigation("GameRanks");
                });
#pragma warning restore 612, 618
        }
    }
}
